"""输入一个坐标数组，输出合适的坐标数组，使得顺序连接得到凸多边形。"""

# Graham 扫描算法
# generated by AI doubao
from dataclasses import dataclass
from typing import Sequence


@dataclass
class Point:
    x: float
    y: float

    def to_tuple(self):
        return (self.x, self.y)


type Coodinate = Point | tuple[float, float]


def convex_hull(coodinates: Sequence[Coodinate]) -> Sequence[Point]:
    def cross(o: Point, a: Point, b: Point):
        return (a.x - o.x) * (b.y - o.y) - (a.y - o.y) * (b.x - o.x)

    points = [Point(*c) if isinstance(c, tuple) else c for c in coodinates]

    if len(points) <= 1:
        return points

    points.sort(key=lambda p: (p.x, p.y))

    lower = list[Point]()
    for p in points:
        while len(lower) >= 2 and cross(lower[-2], lower[-1], p) <= 0:
            lower.pop()
        lower.append(p)
    upper = list[Point]()
    for p in reversed(points):
        while len(upper) >= 2 and cross(upper[-2], upper[-1], p) <= 0:
            upper.pop()
        upper.append(p)

    hull = lower[:-1] + upper[:-1]
    return hull
