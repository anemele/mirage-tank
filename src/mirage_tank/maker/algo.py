"""输入一个坐标数组，输出合适的坐标数组，使得顺序连接得到凸多边形。"""

# Graham 扫描算法
# generated by AI doubao
from typing import Sequence

type Point = tuple[float, float]


def convex_hull(points: Sequence[Point]) -> Sequence[Point]:
    def cross(o: Point, a: Point, b: Point):
        return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0])

    if len(points) <= 1:
        return points

    points = sorted(points, key=lambda p: (p[0], p[1]))

    lower = list[Point]()
    for p in points:
        while len(lower) >= 2 and cross(lower[-2], lower[-1], p) <= 0:
            lower.pop()
        lower.append(p)
    upper = list[Point]()
    for p in reversed(points):
        while len(upper) >= 2 and cross(upper[-2], upper[-1], p) <= 0:
            upper.pop()
        upper.append(p)

    hull = lower[:-1] + upper[:-1]
    return hull
